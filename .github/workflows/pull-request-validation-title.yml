name: "Pull request / Validation / Title"

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  title-checker:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5.4.0
        id: lint_pr_title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed (newline-delimited).
          types: |
            build
            ci
            docs
            feat
            fix
            refactor
            test
            style
            revert
            translation
          # Configure that a scope is optional.
          requireScope: false
          # Configure additional validation for the subject based on a regex.
          # This example ensures the subject doesn't start with an uppercase character, and no dot (.) at the end
          subjectPattern: ^[^A-Z].*[^.]$
          subjectPatternError: |
            The Pull request title didn't match the configured pattern. 
            Please ensure that the summary:
              - doesn't start with an uppercase character
              - no dot (.) at the end.

            Current summary: 
            "{subject}"

      - uses: marocchino/sticky-pull-request-comment@v2.9.0
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        if: ${{ always() }}
        with:
          header: ${{ github.job }}
          recreate: true
          message: |
            üëã Hey there and thank you for opening this pull request!
            We require pull request titles to follow the [Conventional Commits specification](https://github.com/PrintMakerLab/.github/blob/main/CONTRIBUTING.md#commit)
            ‚ÑπÔ∏è Details:
            ```
            ${{ steps.lint_pr_title.outputs.error_message || 'Everything is OK!' }}
            ```
     
      # Delete a previous comment when the issue has been resolved
      - if: ${{ always() && steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: ${{ github.job }}
          delete: true
          ignore_empty: false